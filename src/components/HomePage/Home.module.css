/** @format */

.homePage {
  padding: clamp(160px, 14vw, 240px) 0 0;
}

/* Portfolio Landing */
.homeIntro {
  position: relative;
  margin: auto;
  width: min(100%, 1400px);
  text-align: center;
  color: var(--text-primary);
  text-shadow: var(--text-shadow);
}

.homeHeader {
  margin-bottom: clamp(50px, 8vw, 100px);
  font-size: var(--text1);
  font-weight: 900;
}
.wave {
  display: inline-block;
  margin-left: 2vw;
  animation: 1.8s ease-in-out 1s infinite wave-animation;
  transform-origin: 70% 70%;
}
@keyframes wave-animation {
  0% {
    transform: rotate(0deg);
  }
  10% {
    transform: rotate(14deg);
  } /* The following five values can be played with to make the waving more or less extreme */
  20% {
    transform: rotate(-14deg);
  }
  30% {
    transform: rotate(14deg);
  }
  40% {
    transform: rotate(-8deg);
  }
  50% {
    transform: rotate(8deg);
  }
  60% {
    transform: rotate(-4deg);
  } /* Reset for the last half to pause */
  100% {
    transform: rotate(0deg);
  }
}

.typeText {
  margin-bottom: min(2vw, 30px);
  text-align: center;
  font-size: var(--text3);
  font-weight: 700;
}

.typeText > div {
  display: inline-block;
  margin: min(5vw, 60px) 0;
  letter-spacing: 2px;
  text-shadow: var(--text-shadow);
}

/* Developers Introduction */
.developerIntro {
  position: relative;
  margin: 0 auto;
  width: min(90%, 1450px);
  padding-top: 100px;
  padding-bottom: 20px;
  text-align: center;
  color: var(--text-primary);
  font-weight: 600;
  background-color: transparent;
  backdrop-filter: var(--text-bg-blur);
}
.developerIntro > h2 {
  font-size: var(--text2);
  letter-spacing: 2.5px;
  font-weight: 800;
}
.myAvtar {
  float: right;
  margin: 20px 20px 10px;
}
.myAvatarImage {
  height: min(20vw, 300px);
  width: min(15vw, 300px);
}
.developerIntro > p {
  padding: 2vw 2vw;
  font-size: var(--text4);
  text-align: left;
}

.developerSkills {
  position: relative;
}
.developerSkills > h2 {
  margin: 30vh 0 0;
  text-align: center;
  letter-spacing: 2.5px;
  font-size: var(--text2);
  font-weight: 800;
  color: var(--text-primary);
}

@media only screen and (max-width: 900px) {
  .developerIntro {
    padding-top: 20px;
  }
  .developerSkills > h2 {
    margin: 22vh 0 0;
    padding-bottom: 0;
  }
}

/* Skill Sections Styling */

.skillSectionTitle {
  position: relative;
  margin: 0.2rem 0 1.4em;
  text-align: center;
  color: var(--text-primary);
  font-size: var(--text2);
  font-weight: 800;
}

.icon,
.manualIcon {
  width: min(20vw, 90px);
  aspect-ratio: 1;
}
.manualIcon {
  height: auto;
  filter: grayscale(80%);
}

div.skillsListContainer ~ h4,
h3.skillSectionTitle ~ h4 {
  position: relative;
  margin: 0 0 0.8em;
  text-align: center;
  color: var(--text-detail);
  font-size: var(--text4);
  font-weight: 800;
  text-decoration: underline;
}

.skillsListContainer {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  width: min(80%, 1300px);
  padding: 2% 4%;
  margin: 60px auto 100px;
}

.skillContainer {
  list-style: none;
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  margin: 0 2vw 3vh;
  padding: clamp(8px, 2vw, 18px) 0.2em max(0.2vw, 4px);
  width: clamp(100px, 18%, 220px);
  aspect-ratio: 6/9;
  color: var(--text-primary);
  background-color: var(--layout-bg);
  border: 2.7px solid black;
  border-radius: 10px;
  box-shadow: var(--shadow);
  overflow: hidden;
  transition: all 0.4s ease 0s;
  /* For Meter's Star inlay */
  font-size: 7vw;
}

.skillContainer:hover {
  color: var(--text-secondary);
  background-color: var(--background);
  border: 2.2px solid black;
  box-shadow: var(--shadow-hover);
  transform: scale(1.35);
  z-index: 10;
}

.skillContainer span {
  margin: clamp(4px, 2vw, 10px) 0 1vw;
  text-align: center;
  font-size: var(--text5);
  height: clamp(10px, 2vw, 60px);
}

.skillContainer meter {
  position: absolute;
  bottom: 0;
  justify-content: baseline;
  width: 3.05em;
  height: clamp(26.5px, 1.34em, 60px);
  font-size: clamp(18px, 0.45em, 46px);
}

@media only screen and (max-width: 600px) {
  .skillContainer meter {
    bottom: 3%;
  }
}

.skillContainer meter::-webkit-meter-bar {
  -webkit-appearance: none;
  background: rgba(80, 80, 80)
    url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><text color="red" font-size="100" y=".8em" opacity=".3" z-index="2000">★</text></svg>')
    0 / auto 100%;
}

.skillContainer meter::-webkit-meter-optimum-value {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><text fill="rgb(0,255,42)" font-size="100" y=".8em" opacity="1" z-index="2000">★</text></svg>')
    0 / auto 100%;
}

.skillContainer meter::-webkit-meter-suboptimum-value {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><text fill="rgb(230,230,0)" font-size="100" y=".8em" opacity="1" z-index="2000">★</text></svg>')
    0 / auto 100%;
}

.skillContainer meter::-webkit-meter-even-less-good-value {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><text fill="rgba(250, 0, 0)" font-size="100" y=".8em" opacity="1" z-index="2000">★</text></svg>')
    0 / auto 100%;
}

.skillContainer meter::-moz-meter-optimum::-moz-meter-bar {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><text fill="rgb(0,255,42)" font-size="100" y=".8em" opacity="1" z-index="2000">★</text></svg>')
    0 / auto 100%;
}

.skillContainer meter::-moz-meter-sub-optimum::-moz-meter-bar {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><text fill="rgb(230,230,0)" font-size="100" y=".8em" opacity="1" z-index="2000">★</text></svg>')
    0 / auto 100%;
}

.skillContainer meter::-moz-meter-sub-sub-optimum::-moz-meter-bar {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><text fill="rgba(250, 0, 0)" font-size="100" y=".8em" opacity="1" z-index="2000">★</text></svg>')
    0 / auto 100%;
}
